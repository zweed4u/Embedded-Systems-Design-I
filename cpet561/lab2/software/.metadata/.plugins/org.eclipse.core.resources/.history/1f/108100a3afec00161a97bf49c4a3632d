# ---------------------------------------------------------------
# Assembly language program that reads data from the switches,
# that are memory mapped to location 0x00011000, and displays
# it on the LEDs, which are memory mapped to location 0x00011010
# ---------------------------------------------------------------

.text

# -define a macro to move a 32 bit address to a register

.macro MOVIA reg, addr
  movhi \reg, %hi(\addr)
  ori \reg, \reg, %lo(\addr)
.endm

# -define constants - address of i/o for these peripherals
.equ I_SWITCH, 0x11020
.equ I_TRIGGER, 0x11010
.equ O_ACCUM, 0x11000

#Define the main program
.global main
#load r2 and r3 and r4 with the addresses and r5 with accumulator val
main:
  movia r2, I_SWITCH
  movia r3, I_TRIGGER
  movia r4, O_ACCUM
  movia r5, 0
  movie r6 1

#beq - two forever loops
loop:
  loop:
    beq 1, 0(r3), trigHi
    br    loop
  loop:
    0 & 0(r3)
    br    loop
  #accumulator val reg gets current contents plus switch contents
  add r5, r5, 0(r2)
  ldbio r4, 0(r5)
  stbio r4, 0(r5)
  br    loop
